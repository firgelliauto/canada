{%- comment -%}

{%- endcomment -%}
<section id="collection-icon-section" class="uk-section fg-section__muted-blue">
  <div class="uk-container">
    {% assign shop_url = shop.url %}
    {% assign icon_image_base_url =  'icon-collection_' %}
    {% assign collection_path_base_url =  shop_ur | append: '/collections/' %}
    {% assign product_path_base_url = shop_ur | append: '/products/' %}

    {% if section.settings.enable_card == true %}
      {% assign card_style = 'uk-card uk-card-default' %}
      {% assign card_body_height = 'fg-container-full-height' %}
    {% else %}
      {% assign card_style = '' %}
      {% assign card_body_height = '' %}
    {% endif %}

    {% if section.settings.title != blank %}
      <div class="fg-heading-margin uk-text-center {{ has_border }} ">
        <h2 class="collection-list__title uk-text-center">{{ section.settings.title }}</h2>
        {% if section.settings.sub_title != blank %}
          <p class="uk-text-center">{{ section.settings.sub_title }}</p>
        {% endif %}
      </div>
    {% endif %}
    <!-- Collection icon section currently includes a filter -->
    {% include 'loop-collection-icon-cards' %}

    {% if section.blocks.size == 0 %}
      {% include 'no-blocks' %}
    {% endif %}
  </div>
</section>

{% schema %}
  {
    "name": "Collection Cards",
    "max_blocks": 12,
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Section Title",
        "default": "Our Collection"
      },
      {
        "type": "text",
        "id": "sub_title",
        "label": "Section Sub-Title"
      },
      {
        "type": "checkbox",
        "id": "enable_card",
        "default": true,
        "label": "Display as card"
      }
    ],
    "blocks": [
      {
        "type": "select",
        "name": "Add Collection Icon",
        "settings": [
          {
            "type":      "select",
            "id":        "collection_type",
            "label":     "Select Collection",
            "options": [
             {
               "group": "actuators",
               "value": "premium",
               "label": "Premium"
             },
             {
               "group": "actuators",
               "value": "bullet",
               "label": "Bullet"
             },
             {
               "group": "actuators",
               "value": "linear",
               "label": "Linear"
             },
             {
               "group": "actuators",
               "value": "feedback",
               "label": "Feedback"
             },
             {
               "group": "actuators",
               "value": "track",
               "label": "Track "
             },
             {
               "group": "actuators",
               "value": "column",
               "label": "Column"
             },
             {
               "group": "actuators",
               "value": "slide",
               "label": "Slide Rail"
             },
             {
               "group": "lifts",
               "value": "table",
               "label": "Table"
             },
             {
               "group": "lifts",
               "value": "tv",
               "label": "TV"
             },
             {
               "group": "accessories",
               "value": "bracket",
               "label": "Brackets"
             },
             {
               "group": "accessories",
               "value": "switch",
               "label": "Switches"
             },
             {
               "group": "accessories",
               "value": "controller",
               "label": "Controllers"
             },
             {
               "group": "accessories",
               "value": "remote",
               "label": "Remotes"
             },
             {
               "group": "accessories",
               "value": "relay",
               "label": "Relays"
             },
             {
               "group": "accessories",
               "value": "motor",
               "label": "Motors"
             },
             {
               "group": "accessories",
               "value": "robotic",
               "label": "Robotics"
             },
             {
               "group": "accessories",
               "value": "cable",
               "label": "Cable Management"
             },
             {
               "group": "accessories",
               "value": "power_supply",
               "label": "Power Supplies"
             }
            ]
          },
          {
            "type":      "radio",
            "id":        "card_width",
            "label":     "Set width size",
            "options": [
             { "value": "uk-width-1-2@s", "label": "1/2" },
             { "value": "uk-width-2-3@s", "label": "2/3" },
             { "value": "uk-width-1-1@s", "label": "Full" }
            ],
            "default":   "uk-width-1-2@s"
          },
          {
            "type": "text",
            "id":   "collection_title",
            "label": "Collection Title"
          },
          {
            "type": "textarea",
            "id":   "collection_text",
            "label": "Collection Text"
          },
          {
            "id"   : "collection_url",
            "type" : "collection",
            "label": "Collection Link"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Collection List Icons + Content",
        "category": "Collection"
      }
    ]
  }
{% endschema %}

{% stylesheet %}

{% endstylesheet %}

{% javascript %}

    $(document).ready(function () {
      'use strict';

      $('shopify:section:load').ready(function(){

        $('.fg-card-collection-icon').mouseenter( function(e){
          var $svg = $(this).find('svg').data('name');

          if ($svg === 'column-kinetic' || $svg === 'table-kinetic') {
            var tl = anime.timeline({
              duration: 250,
              easing: 'easeOutExpo'
            });
            tl
            .add({
              targets: '#' + $svg + ' .js-rod-1, ' + '#' + $svg + ' .js-rod-2',
              translateY: -8
            })
            .add({
              targets: '#' + $svg + ' .js-rod-2',
              translateY: -20
            });
          }
          else if ($svg === 'switch-kinetic') {
            anime({
              duration: 500,
              easing: 'easeOutExpo',
              targets: '#' + $svg + ' .js-rod',
              transformOrigin: ("13px 55px 0"),
              rotate: '16deg'
            });
          }
          else if ($svg === 'robotic-kinetic') {
            var tl = anime.timeline({
              duration: 250,
              easing: 'easeOutExpo'
            });
            tl
            .add({
              targets: '#' + $svg + ' .js-l-arm',
              rotate: '180deg'
            })
            .add({
              targets: '#' + $svg + ' .js-r-arm',
              rotate: '-180deg'
            })
            .add({
              targets: '#' + $svg + ' .js-blink',
              duration: 250,
              opacity: 0
            })
            .add({
              targets: '#' + $svg + ' .js-blink',
              duration: 250,
              opacity: 1
            });
          }
          else if ($svg === 'motor-kinetic') {
            var tl = anime.timeline({
              easing: 'easeOutExpo',
              loop: 2
            });
            tl
            .add({
              duration: 20,
              targets: '#' + $svg + ' .js-rod',
              rotate: '180deg'
            })
            .add({
              duration: 250,
              targets: '#' + $svg + ' .js-rod',
              rotate: '180deg'
            })
            .add({
              duration: 20,
              targets: '#' + $svg + ' .js-rod',
              rotate: '0deg'
            })
            .add({
              duration: 350,
              targets: '#' + $svg + ' .js-rod',
              rotate: '0deg'
            })
            ;
          }
          else if ($svg === 'power_supply-kinetic') {
            var tl = anime.timeline({
              easing: 'easeOutExpo',
              loop: 2
            });
            tl
            .add({
              opacity: 1,
              duration: 20,
              targets: '#' + $svg + ' .js-blink',
              rotate: '180deg'
            })
            .add({
              duration: 500,
              targets: '#' + $svg + ' .js-blink',
              rotate: '180deg'
            })
            .add({
              opacity: 1,
              duration: 20,
              targets: '#' + $svg + ' .js-blink',
              rotate: '0deg'
            })
            .add({
              duration: 500,
              targets: '#' + $svg + ' .js-blink',
              rotate: '0deg'
            })
            ;
          }
          else if ($svg === 'sale-kinetic') {
            anime({
              duration: 1000,
              easing: 'easeOutExpo',
              transformOrigin: ("70px 10px 0"),
              targets: '#' + $svg + ' .js-rod',
              rotate: '-45deg'
            });
          }
          else if ($svg === 'bracket-kinetic') {
            var tl = anime.timeline({
              duration: 250,
              easing: 'easeOutExpo'
            });
            tl
            .add({
              targets: '#' + $svg + ' .js-rod-1, ' + '#' + $svg + ' .js-rod-2',
              translateY: -20,
            })
            .add({
              targets: '#' + $svg + ' .js-rod-2',
              translateX: 20
            });
          }
          else if ($svg === 'controller-kinetic' || $svg === 'relay-kinetic') {
            var tl = anime.timeline({
              duration: 250,
              easing: 'easeOutExpo'
            });
            tl
            .add({
              targets: '#' + $svg + ' .js-wires > stroke-rod-midtone',
              opacity: 0,
            })
            .add({
              targets: '#' + $svg + ' .js-blink',
              opacity: 0,
            })
            .add({
              targets: '#' + $svg + ' .js-wires > .stroke-rod-midtone',
              strokeDashoffset: [anime.setDashoffset, 0],
              easing: 'easeInOutSine',
              opacity: 1,
              duration: 300,
              direction: 'normal'
            })
            .add({
              targets: '#' + $svg + ' .js-blink',
              duration: 500,
              opacity: 1,
              direction: 'alternate',
              loop: 4
            });
          }
          else if ($svg === 'remote-kinetic') {
            var tl = anime.timeline({
              easing: 'easeOutExpo',
              duration: 250,
              loop: 2
            });
            tl
            .add({
              targets: '#' + $svg + ' .js-down-blink',
              opacity: 0
            })
            .add({
              targets: '#' + $svg + ' .js-up-blink',
              opacity: 0
            })
            .add({
              targets: '#' + $svg + ' .js-blink',
              opacity: 0
            })
            ;
          }
          else if($svg === 'cable-kinetic') {
            anime({
              targets: '#' + $svg + ' .js-rod',
              translateY: -20,
              delay: anime.stagger(100, {direction: 'reverse'})
            });
          }
          else if($svg === 'track-kinetic') {
            anime({
              duration: 500,
              easing: 'easeOutExpo',
              targets: '#' + $svg + ' .js-rod',
              translateY: -50
            });
          }
          else {
            anime({
              duration: 500,
              easing: 'easeOutExpo',
              targets: '#' + $svg + ' .js-rod',
              translateY: -20
            });
          }
        })
        /*
        **
        ** MouseLeave
        **
        */
        $('.fg-card-collection-icon').mouseleave(function(e){
          var $svg = $(this).find('svg').data('name');
          if ($svg === 'column-kinetic' || $svg === 'table-kinetic') {
            var tl = anime.timeline({
              duration: 250
            });
            tl
            .add({
              targets: '#' + $svg + ' .js-rod-1, ' + '#' + $svg + ' .js-rod-2',
              translateY: 0
            })
            .add({
              targets: '#' + $svg + ' .js-rod-2',
              translateY: 0
            });
          }
          else if ($svg === 'switch-kinetic') {
            anime({
              duration: 500,
              targets: '#' + $svg + ' .js-rod',
              transformOrigin: ("13px 55px 0"),
              rotate: '0deg'
            });
          }
          else if ($svg === 'robotic-kinetic') {
            var tl = anime.timeline({
              duration: 250,
              easing: 'easeOutExpo'
            });
            tl
            .add({
              targets: '#' + $svg + ' .js-l-arm',
              rotate: '0'
            })
            .add({
              targets: '#' + $svg + ' .js-r-arm',
              rotate: '0'
            });
          }
          else if ($svg === 'motor-kinetic') {
            anime({
              duration: 20,
              targets: '#' + $svg + ' .js-rod',
              rotate: '0deg'
            });
          }
          else if ($svg === 'power_supply-kinetic') {
            anime({
              duration: 20,
              opacity: 0,
              targets: '#' + $svg + ' .js-blink',
              rotate: '0deg'
            });
          }
          else if ($svg === 'sale-kinetic') {
            anime({
              duration: 500,
              transformOrigin: ("70px 10px 0"),
              targets: '#' + $svg + ' .js-rod',
              rotate: '0deg'
            });
          }
          else if ($svg === 'bracket-kinetic') {
            var tl = anime.timeline({
              duration: 250
            });
            tl
            .add({
              targets: '#' + $svg + ' .js-rod-2',
              translateX: 0
            })
            .add({
              targets: '#' + $svg + ' .js-rod-1, ' + '#' + $svg + ' .js-rod-2',
              translateY: 0
            });
          }
          else if ($svg === 'controller-kinetic') {
            var tl = anime.timeline({
              duration: 250
            });
            tl
            .add({
              targets: '#' + $svg + ' .js-wires > *',
              opacity: 1
            })
            .add({
              targets: '#' + $svg + ' .js-blink',
              opacity: 1
            });
          }
          else if ($svg === 'remote-kinetic') {
            var tl = anime.timeline({
              duration: 250
            });
            tl
            .add({
              targets: '#' + $svg + ' .js-down-blink',
              opacity: 1
            })
            .add({
              targets: '#' + $svg + ' .js-up-blink',
              opacity: 1
            })
            .add({
              targets: '#' + $svg + ' .js-blink',
              opacity: 1
            })
            ;
          }
          else if($svg === 'cable-kinetic') {
            anime({
              targets: '#' + $svg + ' .js-rod',
              translateY: 0,
              easing: 'easeOutElastic(1, 2)',
              delay: anime.stagger(100, {direction: 'reverse'})
            });
          }
          else {
            anime({
              duration: 500,
              targets: '#' + $svg + ' .js-rod',
              translateY: 0
            });
          }
        })
      });

    });

{% endjavascript %}
