<script>

function findProductSchemaScript() {
    var scriptElements = document.querySelectorAll('script[type="application/ld+json"]');
    return scriptElements[0];
}

  function createReviews(reviews){
    var schemaReview = [];
    var sumRating = 0;
    for (var i=0; i<reviews.length; i++) {
      sumRating += parseInt(reviews[i][1]);
      schemaReview.push({
        "@type": "Review",
        "name": reviews[i][2],
        "reviewBody": reviews[i][3],
        "author": {
            "@type": "Person",
            "name": reviews[i][2]
        },
        "name": reviews[i][2],
        "datePublished": reviews[i][6],
        "reviewRating": {
            "@type": "Rating",
            "ratingValue": reviews[i][1]
        },
        "publisher": {
            "@type": "Organization",
            "name": "Shopify Product Reviews"
        }
      });
    }
    let averageRating = sumRating/reviews.length;
    var productSchemaScript = findProductSchemaScript();
    var schemaData = JSON.parse(productSchemaScript.textContent);
    schemaData.review = schemaReview;
    schemaData.aggregateRating = [{
        "@type": "AggregateRating",
        "ratingValue": parseFloat(averageRating).toFixed(2),
        "bestRating": "5",
        "worstRating": "1",
        "ratingCount": reviews.length
    }];
    productSchemaScript.textContent = JSON.stringify(schemaData, null, 2);
  }

  function processData(allText) {
    var allTextLines = allText.split(/\r\n|\n/);
    var headers = allTextLines[0].split(',');

    for (var i=1; i<allTextLines.length; i++) {
        const data = allTextLines[i].split(',');
        if(data[0] == '{{ product.handle }}'){
          reviews.push(data);
        }
    }
    createReviews(reviews);
}

function pullAndOutputReviews() {
  $.ajax({
    type: "GET",
    url: '{{ "reviews.csv" | asset_url }}',
    dataType: "text",
    success: function(data) {
      processData(data);
    },
    error: function(jqXHR, textStatus, errorThrown) {

      console.error("Failed to retrieve reviews:", textStatus, errorThrown);

    }
  });
}

  const reviews = [];
  pullAndOutputReviews();

</script>