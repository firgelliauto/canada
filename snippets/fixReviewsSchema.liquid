<script>

function findProductSchemaScript() {
    var scriptElements = document.querySelectorAll('script[type="application/ld+json"]');
    return scriptElements[0];
}
/*
function findAggregateReviewsSchemaScript() {
    var scriptElements = document.querySelectorAll('script[type="application/ld+json"]');
    return scriptElements[scriptElements.length-1];
}*/

function handleReviewScript() {
    reviewsArray = addReviews();
    
    var productSchemaScript = findProductSchemaScript();
    var schemaData = JSON.parse(productSchemaScript.textContent);
    schemaData.review = reviewsArray;

    //var AggregateRating = findAggregateReviewsSchemaScript();
    //AggregateRatingJSON = JSON.parse(AggregateRating.textContent);
    var reviewsContent = document.querySelector('.reviews-num').textContent;
    var matches = reviewsContent.match(/\d+/);
    //var numberValue = matches ? parseInt(matches[0]) : null;

    schemaData.aggregateRating = [{
        "@type": "AggregateRating",
        "ratingValue": document.querySelector('.big-point').textContent,
        "bestRating": "5",
        "worstRating": "1",
        "ratingCount": matches[0]
    }];
    
    productSchemaScript.textContent = JSON.stringify(schemaData, null, 2);
    console.log(productSchemaScript.outerHTML);
    //AggregateRating.remove();
    
}


function addReviews(){
    var reviewsArray = [];
    var reviews = Array.from(document.getElementsByClassName('list-review'));
    console.log(reviews);
    //console.log(reviews.length);
    for(i = 0; i < reviews.length; i++){
        var name = reviews[i].querySelector('.author-name').innerHTML;
        var description = reviews[i].children[1].innerHTML;
        console.log(reviews[i]);
        console.log(document.querySelectorAll('.reviews-text')[i]);
        //console.log(description);
        //console.log(description.length);
        var starRating = parseInt(document.getElementsByClassName('big-point')[0].innerHTML);

        reviewsArray.push({
            "@type": "Review",
            "name": name,
            "reviewBody": description,
            "author": {
                "@type": "Person",
                "name": name
            },
            "name": name,
            "datePublished": "2024-01-08",
            "reviewRating": {
                "@type": "Rating",
                "ratingValue": starRating
            },
            "publisher": {
                "@type": "Organization",
                "name": "Shopify Product Reviews"
            }
        });
        
    }
    return reviewsArray;
}

// Function to set up the observer
function setupObserver() {
    var targetElement = document.querySelector('.reviews-text');
    // Check if the target element exists
    if (targetElement) {
        var observer = new MutationObserver(function(mutationsList, observer) {
            handleContentChange(mutationsList, observer, targetElement);
        });
        
        var observerOptions = { childList: true };
        observer.observe(targetElement, observerOptions);
    } else {
        setTimeout(setupObserver, 100); // Adjust the delay as needed
    }
}
window.addEventListener("load", function() {
    setupObserver();
});
// Define handleContentChange function
function handleContentChange(mutationsList, observer, targetElement) {
    for(var mutation of mutationsList) {
        if (mutation.type === 'childList' && targetElement.innerHTML.trim() !== '') {
            //console.log('Content added to .reviews-text:', targetElement.innerHTML);
            handleReviewScript();
            observer.disconnect();
            break; // Exit the loop since the condition is met
        }
    }
}




</script>